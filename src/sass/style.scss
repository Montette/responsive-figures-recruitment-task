@import 'normalize';

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

$sizes: (
  default  : calc(9px + .5vw),
  345px : calc(11px + .7vw),
  583px : calc(11px + .5vw),
  900px : calc(12px + .2vw),
  1200px: calc(13px + .2vw),
  1400px: calc(14px + .4vw)
);

@mixin elements-size($sizes-object) {
    @each $breakpoint, $size in $sizes-object {
      @if $breakpoint == 'default' {
        font-size: $size;
      }
      @else {
        @media screen and (min-width: $breakpoint) {
          font-size: $size;
        }
      }
    }
  }


@mixin flex($justify,$align){
    display: flex;
    justify-content: $justify;
    align-items: $align;
}

@mixin border {
    border: 3px solid black;
}

html {
    @include elements-size($sizes);
  }

  .figures {
    @include flex(initial,initial);
    flex-wrap: wrap;
    background-color: darken(green,10%);
    min-height: 100vh;
    
    @media only screen and(min-width: 583px){
        padding-bottom: 20px;
    }
    &__topElement {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 60px;
        height: 5rem;
        background-color: rgb(55, 114, 0);
        @include border;
    }
    &__column{
        @include flex(initial,initial);
        flex-wrap: wrap;
        &--left {
            @include flex(flex-start,flex-start); 
            width: 100vw;
            flex-direction: column;
            padding-top: 5.5rem;
            margin-top: 5rem;
            @media only screen and(min-width: 583px){
                width:65%;     
            }
            @media only screen and(min-width: 900px){
                @include flex(space-between,flex-start);
                flex-direction: row;
            }
        }
        &--right{
            width: 100vw;
            padding: 0 0 1rem 4rem;
            @media only screen and(min-width: 583px){
                @include flex(flex-end,initial);
                width:35%;
                padding: 2.5rem 2rem 0 0;
                margin-top: 5rem;
            }
        }
    }
    &__bigRectangle {
        width: 13rem;
        height: 28rem;
        background-color: darken(red,20%);
        @include border;
    }

    & .redSquares {
        transform: rotate(-45deg);
        @include flex(space-between,center);
        &__square {
            width: 8rem;
            height: 8rem;
            background-color: red;
            @include border;
            animation: redSquareAnim 1s 2s ease forwards;
            opacity: 0;
            &:first-child{
                margin-right: 3.8rem;
                margin-right: 3.2rem;
                animation-delay: 3s;
            }
        }
    }

    & .blueFigures {
       
        @include flex(initial, initial);
        margin: 80px 0 20px 10px;
        margin: 8rem 0 2rem 1rem;
        @media only screen and(min-width: 900px){
            margin: 0;
        }
        @media only screen and(min-width: 900px){
            margin-right:20px;
            margin-right:2rem;
        }
        &__rectanglesContainer{
            flex-direction: column;
            @include flex(space-around, center);
            padding: 1px 0;
            margin-right: 17px;
            padding: .1rem 0;
            margin-right: 1.7rem;
        }

        &__rectangle {
            width: 8rem;
            height:12px;
            height: 1.2rem;
            background-color: blue;
            @include border;
            opacity: 0;
            animation: smallRectangleleAnim 1s 3.5s ease forwards;
            &:nth-child(2){
                animation-delay: 4s;
            }
        }
        &__circle{
            width: 7rem;
            height: 6.4rem;
            border-radius: 50%;
            background-color: rgb(11, 120, 153);
            @include border;
            @include flex(space-between,center);
            flex-direction: column;
            padding: 20px 0;
            opacity: 0;
            animation: circleAnim 3s 5s ease forwards;

         
        
        }
    }
    
}




      @keyframes redSquareAnim {
         0% { 
             transform: scale(1);
             opacity: 0;
            } 
        30% { 
            transform: scale(1.2); 
            opacity:0 
        }
        40%, 60% { 
            transform: rotate(-20deg) scale(1.3);
             opacity:1}
        50% {
             transform: rotate(20deg) scale(1.3); 
             opacity:1}
        70% { 
            transform: rotate(0deg) scale(1.3);
            opacity:1 }
        100% {
             transform: scale(1); 
             opacity:1}
      }

      @keyframes smallRectangleleAnim {
        0% {
          opacity: 0;
          transform: translateX(2000px);
        }
        60% {
          opacity: 1;
          transform: translateX(-30px);
        }
        80% { transform: translateX(30px);
            opacity: 1;  
        }
        100% { transform: translateX(0);
            opacity: 1; }
      }
      

      @keyframes circleAnim {
        0% {
          opacity: 0;
          transform: scale(.3);
        }
        30% {
          opacity: 1;
          transform: scale(1.2);
        }
        70% { 
            transform: scale(.7);
         }
        100% { 
            transform: scale(1);
            opacity: 1;
         }
      }
    