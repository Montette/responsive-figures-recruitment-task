@import 'normalize';

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

$sizes: (
  default  : calc(10px + .5vw),
  583px : calc(11px + .5vw),
  900px : calc(12px + .5vw),
  1400px: calc(14px + .5vw)
);

@mixin elements-size($sizes-object) {
    @each $breakpoint, $size in $sizes-object {
      @if $breakpoint == 'default' {
        font-size: $size;
      }
      @else {
        @media screen and (min-width: $breakpoint) {
          font-size: $size;
        }
      }
    }
  }


@mixin flex($justify,$align){
    display: flex;
    justify-content: $justify;
    align-items: $align;
}

@mixin border {
    border: 3px solid black;
}

html {
    @include elements-size($sizes);
  }

  .figures {
    @include flex(initial,initial);
    flex-wrap: wrap;
    background-color: darken(green,10%);
    min-height: 100vh;  
    @media only screen and(min-width: 583px){
        padding-bottom: 20px;
    }
    &__topElement {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 60px;
        height: 5rem;
        background-color: rgb(55, 114, 0);
        @include border;
    }
    
}